server:
  port: 0

ConsumerKafka:
  bootstrapServers: kafka:9092
  groupId: fromEventSourcing
  topicConsumerFromEventSource: ratingCommandFromEventSource
  topicProducerToEventSource: ratingQueryToEventSource
  transactionPrefix: queryRating

amazon:
  dynamodb:
    endpoint: http://dynamodb:8000
  aws:
    accesskey: aws-access-key
    secretkey: aws-secret-key

spring:
  application:
    name: query-rating-service
  zipkin:
    base-url: http://zipkin:9411/
  logging:
    pattern:
      console: "%clr(%d{yyyy-MM-dd HH:mm:ss}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${springAppName:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    level:
      org.springframework: WARN
      org.hibernate: WARN

management:
  endpoints:
    web:
      exposure:
        include: "*"

  metrics:
    distribution:
      percentiles-histogram.http.server.requests: false
      percentiles.http.server.requests: 0.5, 0.9, 0.95, 0.99, 0.999
      sla.http.server.requests: 500ms, 2000ms

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    healthcheck:
      enabled: true 
    serviceUrl:
      defaultZone: http://serviceregistry:8761/eureka/
  instance:
    prefer-ip-address: true
    metadata-map:
      "prometheus.scrape": "true"
      "prometheus.path": "/actuator/prometheus"
    
ribbon:
  eureka:
    enabled: true
version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper 
    container_name: zookeeper 
    ports:
      - "2181:2181"  
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 
      ZOOKEEPER_TICK_TIME: 2000
# Message queue
  
  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka 
    container_name: kafka 
    depends_on:
      - zookeeper 
    ports:
      - "9092:9092" 
    expose:
      - "9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT

      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,OUTSIDE://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

# database
  redis:
    container_name: redis
    image: redis:6.0.6
    ports:
      - 6379:6379


  cassandra1:
    image: cassandra:latest
    container_name: cassandra-1
    restart: always 
    ports: 
      - 9042:9042
    environment:
      CASSANDRA_CLUSTER_NAME: Realtime_recommender_engine
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_DC: datacenter1
    #volumes:
    #  - ./cassandra/1/data:/var/lib/cassandra/data
    #  - ./cassandra/1/logs:/var/log/cassandra

  cassandra2:
    image: cassandra:latest
    container_name: cassandra-2
    restart: always 
    ports: 
      - 9043:9042
    depends_on:
      - cassandra1
    environment:
      CASSANDRA_CLUSTER_NAME: Realtime_recommender_engine
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_SEEDS: cassandra1
      CASSANDRA_DC: datacenter1
    #volumes:
    #  - ./cassandra/2/data:/var/lib/cassandra/data
    #  - ./cassandra/2/logs:/var/log/cassandra

## RECOMMENDER SERVICE
  nimbus:
    image: storm:1.2.4
    container_name: nimbus
    depends_on:
      - zookeeper
    restart: always
    ports:
      - 6627:6627
    command: storm nimbus -c topology.worker.max.heap.size.mb=65536 -c worker.heap.memory.mb=65536
  
  supervisor:
    image: storm:1.2.4
    depends_on:
      - zookeeper
      - nimbus
    restart: always
    volumes:
      - ./storm/supervisor/logs:/logs
    command: storm supervisor -c worker.childopts=-Xmx%HEAP-MEM%m -c worker.heap.memory.mb=65536 -c supervisor.memory.capacity.mb=262144 -c worker.profiler.enabled=true
  
  ui:
    image: storm:1.2.4
    container_name: ui
    depends_on:
      - nimbus
    restart: always
    ports:
      - 8080:8080
    command: storm ui

## EVENT SOURCE STORAGE 

  recommenderrealtimeservice:
    image: storm:1.2.4
    container_name: recommender-real-time-service
    depends_on:
      - nimbus
      - kafka 
      - redis
    volumes:
      - ./recommender-real-time-service/target:/topology-definition
      - ./recommender-real-time-service/deployment:/topology-deployment
    command: /topology-deployment/deploy-topology.sh

  testingrating:
    build: 
      context: ./test-recommender-api
    depends_on:
      - kafka
    ports:
      - "3456:3456"
    volumes:
      - ./test-recommender-api/target/test-recommender-api-1.0-SNAPSHOT.jar:/recommender/test-recommender-api.jar
    command: "java -Xmx256m -jar /recommender/test-recommender-api.jar"
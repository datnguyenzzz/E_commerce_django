version: '3.8'
services:

# Message queue
  zookeeper:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper 
    container_name: zookeeper 
    ports:
      - "2181:2181"  
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka 
    container_name: kafka 
    depends_on:
      - zookeeper 
    ports:
      - "9092:9092" 
    expose:
      - "9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT

      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,OUTSIDE://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

# database
  redis:
    container_name: redis
    image: redis:6.0.6
    ports:
      - 6379
  
  postgresql:
    container_name: postgresql
    image: postgres:latest
    ports:
      - 5432:5432
    volumes:
      - ./postgrepsql-custom-config:/custom_config
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: EventSource
    command: "postgres -c config_file=/custom_config/postgresql.conf"
## Dynamo
  dynamodb:
    image:  amazon/dynamodb-local
    container_name: dynamodb
    hostname: dynamodb
    restart: always
    volumes:
      -  ./my-dynamodb-data:/home/dynamodblocal/data
    ports:
      - 8000:8000
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data/"
    
## RATING COMMAND 
  commandrating:
    container_name: command-rating-service
    build: 
      context: ./command-rating-service
    ports:
      - 8011:8011
    expose:
      - 8011
    depends_on:
      - kafka
    volumes:
      - ./command-rating-service/target/command-rating-service-1.0-SNAPSHOT.jar:/recommender/command-rating-service.jar
    environment:
      KAFKA_INTERNAL_HOST: kafka
      TOPIC_NAME: ratingCommandToEventSource
    command: "java -Xmx256m -jar /recommender/command-rating-service.jar"

## Query service  
  queryrating:
    container_name: query-rating-service 
    build: 
      context: ./query-rating-service
    ports:
      - 8010:8010
    expose:
      - 8010
    depends_on:
      - kafka
      - dynamodb
    volumes:
      - ./query-rating-service/target/query-rating-service-1.0-SNAPSHOT.jar:/recommender/query-rating-service.jar
    environment:
      DYNAMODB_HOST: dynamodb
      DYNAMODB_PORT: 8000
      KAFKA_INTERNAL_HOST: kafka
      TOPIC_NAME: ratingCommandFromEventSource
      CONSUMER_GROUP: eventSourcing
      REDIS_HOST: redis 
      REDIS_PORT: 6379
      REDIS_LIFE_TIME: 300
    command: "java -Xmx256m -jar /recommender/query-rating-service.jar"

## EVENT SOURCE STORAGE 
  eventstorage:
    container_name: event-source-storage
    build:
      context: ./event-source-storage
    ports:
      - 8001
    depends_on:
      - kafka
      - redis
      - postgresql
    volumes:
      - ./event-source-storage/target/event-source-storage-1.0-SNAPSHOT.jar:/recommender/event-source-storage.jar
    environment:
      KAFKA_INTERNAL_HOST: kafka
      TOPIC_NAME: ratingCommandToEventSource
      CONSUMER_GROUP: eventSourcing
      REDIS_HOST: redis 
      REDIS_PORT: 6379
      REDIS_LIFE_TIME: 300
    command: "java -Xmx256m -jar /recommender/event-source-storage.jar"
  
  walminer:
    container_name: wal-miner
    build: 
      context: ./transaction-log-tailling
    ports:
      - 8002
    depends_on:
      - postgresql
      - eventstorage
    volumes:
      - ./transaction-log-tailling/target/transaction-log-tailling-1.0-SNAPSHOT.jar:/recommender/transaction-log-tailling.jar
    environment:
      KAFKA_INTERNAL_HOST: kafka
      TOPIC_TO_QUERY_SERVICE: ratingCommandFromEventSource
      TOPIC_TO_RECOMMENDER_SERVICE: ratingCommandForRecommendation
    command: "java -Xmx256m -jar /recommender/transaction-log-tailling.jar"

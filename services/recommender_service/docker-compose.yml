version: '3.8'
services:

## Registry services
  serviceregistry:
    container_name: service-registry
    build: 
      context: ./service-registry
    ports:
      - 8761:8761 
    volumes:
      - ./service-registry/target/service-registry-1.0-SNAPSHOT.jar:/recommender/service-registry.jar
    command: "java -Xmx256m -jar /recommender/service-registry.jar"

## Prometheus and blackbox-exporter
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus-config/:/etc/prometheus/
    ports:
      - 9090:9090
    restart: always
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"

  blackbox-exporter:
    image: prom/blackbox-exporter
    ports:
      - 9115:9115
## Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000

# Message queue
  zookeeper:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper 
    container_name: zookeeper 
    ports:
      - "2181:2181"  
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka 
    container_name: kafka 
    depends_on:
      - zookeeper 
    ports:
      - "9092:9092" 
    expose:
      - "9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT

      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,OUTSIDE://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

# database
  redis:
    container_name: redis
    image: redis:6.0.6
    ports:
      - 6379:6379
  
  postgresql:
    container_name: postgresql
    image: postgres:latest
    ports:
      - 5432:5432
    volumes:
      - ./postgrepsql-custom-config:/custom_config
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: EventSource
    command: "postgres -c config_file=/custom_config/postgresql.conf"
## Dynamo
  dynamodb:
    image:  amazon/dynamodb-local
    container_name: dynamodb
    hostname: dynamodb
    restart: always
    volumes:
      -  ./my-dynamodb-data:/home/dynamodblocal/data
    ports:
      - 8000:8000
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data/"
    
## RATING COMMAND 
  commandrating:
    build: 
      context: ./command-rating-service
    depends_on:
      - kafka
      - serviceregistry
    #ports:
    #  - "7000:2222"
    volumes:
      - ./command-rating-service/target/command-rating-service-1.0-SNAPSHOT.jar:/recommender/command-rating-service.jar
    command: "java -Xmx256m -jar /recommender/command-rating-service.jar"

## Query service  
  queryrating:
    build: 
      context: ./query-rating-service
    depends_on:
      - kafka
      - dynamodb
      - serviceregistry
    #ports:
    #  - "7001:2222"
    volumes:
      - ./query-rating-service/target/query-rating-service-1.0-SNAPSHOT.jar:/recommender/query-rating-service.jar
    command: "java -Xmx256m -jar /recommender/query-rating-service.jar"

## EVENT SOURCE STORAGE 
  eventstorage:
    container_name: event-source-storage
    build:
      context: ./event-source-storage
    depends_on:
      - kafka
      - redis
      - postgresql
      - serviceregistry
    #ports:
    #  - 2222
    volumes:
      - ./event-source-storage/target/event-source-storage-1.0-SNAPSHOT.jar:/recommender/event-source-storage.jar
    command: "java -Xmx256m -jar /recommender/event-source-storage.jar"
  
  walminer:
    container_name: wal-miner
    build: 
      context: ./transaction-log-tailling
    depends_on:
      - postgresql
      - eventstorage
      - serviceregistry
    #ports:
    #  - 2222
    volumes:
      - ./transaction-log-tailling/target/transaction-log-tailling-1.0-SNAPSHOT.jar:/recommender/transaction-log-tailling.jar
    command: "java -Xmx256m -jar /recommender/transaction-log-tailling.jar"

## API GATEWAY
  apigateway:
    container_name: api-gateway
    build: 
      context: ./api-gateway
    ports:
      - 8765:8765
    depends_on:
      - serviceregistry
    volumes:
      - ./api-gateway/target/api-gateway-1.0-SNAPSHOT.jar:/recommender/api-gateway.jar
    command: "java -Xmx256m -jar /recommender/api-gateway.jar"
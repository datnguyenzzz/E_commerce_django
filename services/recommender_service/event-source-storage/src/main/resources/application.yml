server:
  port: 0

#Postgre setup 
spring:
  application:
    name: event-source-storage
  datasource:
    url: jdbc:postgresql://postgresql:5432/EventSource
    username: postgres
    password: password
    initialization-mode: always

DBTable:
  clientIdCol: clientId
  itemIdCol: itemId
  scoreCol: score
  eventTypeCol: eventType

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation: true
spring.jpa.hibernate.ddl-auto: create
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

redis:
  host: redis
  port: 6379
  expireTime: 300

incomingEvent:
  avroPublishRatingEvent: AvroPublishRatingEvent
  avroUpdateRatingEvent: AvroUpdateRatingEvent
  avroDeleteRatingEvent: AvroDeleteRatingEvent

ConsumerKafka:
  bootstrapServers: kafka:9092
  groupId: eventSourcing
  topicConsumerFromRatingCommand: ratingCommandToEventSource

management:
  security:
    enabled: true
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    healthcheck:
      enabled: true 
    serviceUrl:
      defaultZone: http://serviceregistry:8761/eureka/
  instance:
    prefer-ip-address: true
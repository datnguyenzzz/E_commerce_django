server:
  port: 0

DBTable:
  clientIdCol: clientId
  itemIdCol: itemId
  scoreCol: score
  eventTypeCol: eventType
  property1Col: property1
  property2Col: property2
  property3Col: property3

incomingEvent:
  avroPublishRatingEvent: AvroPublishRatingEvent
  avroUpdateRatingEvent: AvroUpdateRatingEvent
  avroDeleteRatingEvent: AvroDeleteRatingEvent
  avroQueryRatingEvent: AvroQueryRatingEvent
  avroBuyBehaviorEvent: AvroBuyBehaviorEvent
  avroAddToCartBehaviorEvent: AvroAddToCartBehaviorEvent
  avroAddItemEvent: AvroAddItemEvent
  avroDeleteItemEvent: AvroDeleteItemEvent

transactionKafka:
  partitionIdCommandRating: 1
  partitionIdQueryRating: 2 
  partitionIdBuyBehavior: 3 
  partitionIdAddToCartBehavior: 4
  partitionIdCommandItem: 5
  bootstrapServers: kafka:9092
  transactionIdPrefix: fromEventSource
  topicToQueryService: ratingCommandFromEventSource
  topicToRecommendSerivce: ratingCommandForRecommendation

#Postgre setup 
spring.datasource:
  url: jdbc:postgresql://postgresql:5432/EventSource
  username: postgres
  password: password
  initialization-mode: always

spring:
  application:
    name: log-miner
  zipkin:
    base-url: http://zipkin:9411/
  logging:
    pattern:
      console: "%clr(%d{yyyy-MM-dd HH:mm:ss}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${springAppName:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    level:
      org.springframework: WARN
      org.hibernate: WARN

management:
  endpoints:
    web:
      exposure:
        include: "*"

  metrics:
    distribution:
      percentiles-histogram.http.server.requests: false
      percentiles.http.server.requests: 0.5, 0.9, 0.95, 0.99, 0.999
      sla.http.server.requests: 500ms, 2000ms

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    healthcheck:
      enabled: true 
    serviceUrl:
      defaultZone: http://serviceregistry:8761/eureka/
  instance:
    prefer-ip-address: true
    metadata-map:
      "prometheus.scrape": "true"
      "prometheus.path": "/actuator/prometheus"